/*
 * OncoKB APIs
 * OncoKB, a comprehensive and curated precision oncology knowledge base, offers oncologists detailed, evidence-based information about individual somatic mutations and structural alterations present in patient tumors with the goal of supporting optimal treatment decisions.
 *
 * OpenAPI spec version: v1.0.0
 * Contact: contact@oncokb.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.oncokb.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.oncokb.client.Contact;
/**
 * UserCompany
 */


public class UserCompany {
  @SerializedName("anticipatedReports")
  private String anticipatedReports = null;

  @SerializedName("businessContact")
  private Contact businessContact = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("size")
  private String size = null;

  @SerializedName("useCase")
  private String useCase = null;

  public UserCompany anticipatedReports(String anticipatedReports) {
    this.anticipatedReports = anticipatedReports;
    return this;
  }

   /**
   * Get anticipatedReports
   * @return anticipatedReports
  **/
  @Schema(description = "")
  public String getAnticipatedReports() {
    return anticipatedReports;
  }

  public void setAnticipatedReports(String anticipatedReports) {
    this.anticipatedReports = anticipatedReports;
  }

  public UserCompany businessContact(Contact businessContact) {
    this.businessContact = businessContact;
    return this;
  }

   /**
   * Get businessContact
   * @return businessContact
  **/
  @Schema(description = "")
  public Contact getBusinessContact() {
    return businessContact;
  }

  public void setBusinessContact(Contact businessContact) {
    this.businessContact = businessContact;
  }

  public UserCompany description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public UserCompany size(String size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public String getSize() {
    return size;
  }

  public void setSize(String size) {
    this.size = size;
  }

  public UserCompany useCase(String useCase) {
    this.useCase = useCase;
    return this;
  }

   /**
   * Get useCase
   * @return useCase
  **/
  @Schema(description = "")
  public String getUseCase() {
    return useCase;
  }

  public void setUseCase(String useCase) {
    this.useCase = useCase;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserCompany userCompany = (UserCompany) o;
    return Objects.equals(this.anticipatedReports, userCompany.anticipatedReports) &&
        Objects.equals(this.businessContact, userCompany.businessContact) &&
        Objects.equals(this.description, userCompany.description) &&
        Objects.equals(this.size, userCompany.size) &&
        Objects.equals(this.useCase, userCompany.useCase);
  }

  @Override
  public int hashCode() {
    return Objects.hash(anticipatedReports, businessContact, description, size, useCase);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserCompany {\n");
    
    sb.append("    anticipatedReports: ").append(toIndentedString(anticipatedReports)).append("\n");
    sb.append("    businessContact: ").append(toIndentedString(businessContact)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    useCase: ").append(toIndentedString(useCase)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
