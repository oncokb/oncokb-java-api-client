/*
 * OncoKB APIs
 * OncoKB, a comprehensive and curated precision oncology knowledge base, offers oncologists detailed, evidence-based information about individual somatic mutations and structural alterations present in patient tumors with the goal of supporting optimal treatment decisions.
 *
 * OpenAPI spec version: v1.0.0
 * Contact: contact@oncokb.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.oncokb.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
import org.oncokb.client.User;
import org.threeten.bp.OffsetDateTime;
/**
 * Token
 */


public class Token {
  @SerializedName("creation")
  private OffsetDateTime creation = null;

  @SerializedName("currentUsage")
  private Integer currentUsage = null;

  @SerializedName("expiration")
  private OffsetDateTime expiration = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("renewable")
  private Boolean renewable = null;

  @SerializedName("token")
  private UUID token = null;

  @SerializedName("usageLimit")
  private Integer usageLimit = null;

  @SerializedName("user")
  private User user = null;

  public Token creation(OffsetDateTime creation) {
    this.creation = creation;
    return this;
  }

   /**
   * Get creation
   * @return creation
  **/
  @Schema(description = "")
  public OffsetDateTime getCreation() {
    return creation;
  }

  public void setCreation(OffsetDateTime creation) {
    this.creation = creation;
  }

  public Token currentUsage(Integer currentUsage) {
    this.currentUsage = currentUsage;
    return this;
  }

   /**
   * Get currentUsage
   * @return currentUsage
  **/
  @Schema(description = "")
  public Integer getCurrentUsage() {
    return currentUsage;
  }

  public void setCurrentUsage(Integer currentUsage) {
    this.currentUsage = currentUsage;
  }

  public Token expiration(OffsetDateTime expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Get expiration
   * @return expiration
  **/
  @Schema(description = "")
  public OffsetDateTime getExpiration() {
    return expiration;
  }

  public void setExpiration(OffsetDateTime expiration) {
    this.expiration = expiration;
  }

  public Token id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Token renewable(Boolean renewable) {
    this.renewable = renewable;
    return this;
  }

   /**
   * Get renewable
   * @return renewable
  **/
  @Schema(description = "")
  public Boolean isRenewable() {
    return renewable;
  }

  public void setRenewable(Boolean renewable) {
    this.renewable = renewable;
  }

  public Token token(UUID token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @Schema(description = "")
  public UUID getToken() {
    return token;
  }

  public void setToken(UUID token) {
    this.token = token;
  }

  public Token usageLimit(Integer usageLimit) {
    this.usageLimit = usageLimit;
    return this;
  }

   /**
   * Get usageLimit
   * @return usageLimit
  **/
  @Schema(description = "")
  public Integer getUsageLimit() {
    return usageLimit;
  }

  public void setUsageLimit(Integer usageLimit) {
    this.usageLimit = usageLimit;
  }

  public Token user(User user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @Schema(description = "")
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Token token = (Token) o;
    return Objects.equals(this.creation, token.creation) &&
        Objects.equals(this.currentUsage, token.currentUsage) &&
        Objects.equals(this.expiration, token.expiration) &&
        Objects.equals(this.id, token.id) &&
        Objects.equals(this.renewable, token.renewable) &&
        Objects.equals(this.token, token.token) &&
        Objects.equals(this.usageLimit, token.usageLimit) &&
        Objects.equals(this.user, token.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creation, currentUsage, expiration, id, renewable, token, usageLimit, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Token {\n");
    
    sb.append("    creation: ").append(toIndentedString(creation)).append("\n");
    sb.append("    currentUsage: ").append(toIndentedString(currentUsage)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    renewable: ").append(toIndentedString(renewable)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    usageLimit: ").append(toIndentedString(usageLimit)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
