/*
 * OncoKB APIs
 * OncoKB, a comprehensive and curated precision oncology knowledge base, offers oncologists detailed, evidence-based information about individual somatic mutations and structural alterations present in patient tumors with the goal of supporting optimal treatment decisions.
 *
 * OpenAPI spec version: v1.0.0
 * Contact: contact@oncokb.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.oncokb.client;

import org.oncokb.ApiException;
import org.oncokb.client.UserDetailsDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserDetailsResourceApi
 */
@Ignore
public class UserDetailsResourceApiTest {

    private final UserDetailsResourceApi api = new UserDetailsResourceApi();

    /**
     * createUserDetails
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserDetailsUsingPOSTTest() throws ApiException {
        UserDetailsDTO body = null;
        UserDetailsDTO response = api.createUserDetailsUsingPOST(body);

        // TODO: test validations
    }
    /**
     * deleteUserDetails
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserDetailsUsingDELETETest() throws ApiException {
        Long id = null;
        api.deleteUserDetailsUsingDELETE(id);

        // TODO: test validations
    }
    /**
     * getAllUserDetails
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllUserDetailsUsingGETTest() throws ApiException {
        List<UserDetailsDTO> response = api.getAllUserDetailsUsingGET();

        // TODO: test validations
    }
    /**
     * getUserDetails
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserDetailsUsingGETTest() throws ApiException {
        Long id = null;
        UserDetailsDTO response = api.getUserDetailsUsingGET(id);

        // TODO: test validations
    }
    /**
     * updateUserDetails
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserDetailsUsingPUTTest() throws ApiException {
        UserDetailsDTO body = null;
        UserDetailsDTO response = api.updateUserDetailsUsingPUT(body);

        // TODO: test validations
    }
}
