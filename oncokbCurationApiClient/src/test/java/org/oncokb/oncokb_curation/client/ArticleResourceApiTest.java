/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.oncokb.oncokb_curation.client;

import org.oncokb.oncokb_curation.ApiException;
import org.oncokb.oncokb_curation.client.Article;
import org.oncokb.oncokb_curation.client.ArticleCriteria;
import org.oncokb.oncokb_curation.client.Pageable;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ArticleResourceApi
 */
@Ignore
public class ArticleResourceApiTest {

    private final ArticleResourceApi api = new ArticleResourceApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void countArticlesTest() throws ApiException {
        ArticleCriteria criteria = null;
                Long response = api.countArticles(criteria);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createArticleTest() throws ApiException {
        Article article = null;
                Article response = api.createArticle(article);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteArticleTest() throws ApiException {
        Long id = null;
                api.deleteArticle(id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllArticlesTest() throws ApiException {
        ArticleCriteria criteria = null;
        Pageable pageable = null;
                List<Article> response = api.getAllArticles(criteria, pageable);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getArticleTest() throws ApiException {
        Long id = null;
                Article response = api.getArticle(id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void partialUpdateArticleTest() throws ApiException {
        Long id = null;
        Article article = null;
                Article response = api.partialUpdateArticle(id, article);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchArticlesTest() throws ApiException {
        String query = null;
        Pageable pageable = null;
                List<Article> response = api.searchArticles(query, pageable);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateArticleTest() throws ApiException {
        Long id = null;
        Article article = null;
                Article response = api.updateArticle(id, article);
        // TODO: test validations
    }
    
}
