/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.oncokb.oncokb_curation.client;

import org.oncokb.oncokb_curation.ApiException;
import org.oncokb.oncokb_curation.client.ClinicalTrialsGovCondition;
import org.oncokb.oncokb_curation.client.ClinicalTrialsGovConditionCriteria;
import org.oncokb.oncokb_curation.client.Pageable;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClinicalTrialsGovConditionResourceApi
 */
@Ignore
public class ClinicalTrialsGovConditionResourceApiTest {

    private final ClinicalTrialsGovConditionResourceApi api = new ClinicalTrialsGovConditionResourceApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void countClinicalTrialsGovConditionsTest() throws ApiException {
        ClinicalTrialsGovConditionCriteria criteria = null;
                Long response = api.countClinicalTrialsGovConditions(criteria);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createClinicalTrialsGovConditionTest() throws ApiException {
        ClinicalTrialsGovCondition clinicalTrialsGovCondition = null;
                ClinicalTrialsGovCondition response = api.createClinicalTrialsGovCondition(clinicalTrialsGovCondition);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteClinicalTrialsGovConditionTest() throws ApiException {
        Long id = null;
                api.deleteClinicalTrialsGovCondition(id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllClinicalTrialsGovConditionsTest() throws ApiException {
        ClinicalTrialsGovConditionCriteria criteria = null;
        Pageable pageable = null;
                List<ClinicalTrialsGovCondition> response = api.getAllClinicalTrialsGovConditions(criteria, pageable);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getClinicalTrialsGovConditionTest() throws ApiException {
        Long id = null;
                ClinicalTrialsGovCondition response = api.getClinicalTrialsGovCondition(id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void partialUpdateClinicalTrialsGovConditionTest() throws ApiException {
        Long id = null;
        ClinicalTrialsGovCondition clinicalTrialsGovCondition = null;
                ClinicalTrialsGovCondition response = api.partialUpdateClinicalTrialsGovCondition(id, clinicalTrialsGovCondition);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchClinicalTrialsGovConditionsTest() throws ApiException {
        String query = null;
        Pageable pageable = null;
                List<ClinicalTrialsGovCondition> response = api.searchClinicalTrialsGovConditions(query, pageable);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateClinicalTrialsGovConditionTest() throws ApiException {
        Long id = null;
        ClinicalTrialsGovCondition clinicalTrialsGovCondition = null;
                ClinicalTrialsGovCondition response = api.updateClinicalTrialsGovCondition(id, clinicalTrialsGovCondition);
        // TODO: test validations
    }
    
}
