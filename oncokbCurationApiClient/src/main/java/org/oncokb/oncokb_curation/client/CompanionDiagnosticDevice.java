/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.oncokb.oncokb_curation.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.oncokb.oncokb_curation.client.FdaSubmission;
import org.oncokb.oncokb_curation.client.SpecimenType;
import java.io.Serializable;

/**
 * CompanionDiagnosticDevice
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CompanionDiagnosticDevice implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_MANUFACTURER = "manufacturer";
  @SerializedName(SERIALIZED_NAME_MANUFACTURER)
  private String manufacturer;

  public static final String SERIALIZED_NAME_INDICATION_DETAILS = "indicationDetails";
  @SerializedName(SERIALIZED_NAME_INDICATION_DETAILS)
  private String indicationDetails;

  public static final String SERIALIZED_NAME_FDA_SUBMISSIONS = "fdaSubmissions";
  @SerializedName(SERIALIZED_NAME_FDA_SUBMISSIONS)
  private Set<FdaSubmission> fdaSubmissions = null;

  public static final String SERIALIZED_NAME_SPECIMEN_TYPES = "specimenTypes";
  @SerializedName(SERIALIZED_NAME_SPECIMEN_TYPES)
  private Set<SpecimenType> specimenTypes = null;

  public CompanionDiagnosticDevice() { 
  }

  public CompanionDiagnosticDevice id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public CompanionDiagnosticDevice name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CompanionDiagnosticDevice manufacturer(String manufacturer) {
    
    this.manufacturer = manufacturer;
    return this;
  }

   /**
   * Get manufacturer
   * @return manufacturer
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getManufacturer() {
    return manufacturer;
  }


  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }


  public CompanionDiagnosticDevice indicationDetails(String indicationDetails) {
    
    this.indicationDetails = indicationDetails;
    return this;
  }

   /**
   * Get indicationDetails
   * @return indicationDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIndicationDetails() {
    return indicationDetails;
  }


  public void setIndicationDetails(String indicationDetails) {
    this.indicationDetails = indicationDetails;
  }


  public CompanionDiagnosticDevice fdaSubmissions(Set<FdaSubmission> fdaSubmissions) {
    
    this.fdaSubmissions = fdaSubmissions;
    return this;
  }

  public CompanionDiagnosticDevice addFdaSubmissionsItem(FdaSubmission fdaSubmissionsItem) {
    if (this.fdaSubmissions == null) {
      this.fdaSubmissions = new LinkedHashSet<FdaSubmission>();
    }
    this.fdaSubmissions.add(fdaSubmissionsItem);
    return this;
  }

   /**
   * Get fdaSubmissions
   * @return fdaSubmissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<FdaSubmission> getFdaSubmissions() {
    return fdaSubmissions;
  }


  public void setFdaSubmissions(Set<FdaSubmission> fdaSubmissions) {
    this.fdaSubmissions = fdaSubmissions;
  }


  public CompanionDiagnosticDevice specimenTypes(Set<SpecimenType> specimenTypes) {
    
    this.specimenTypes = specimenTypes;
    return this;
  }

  public CompanionDiagnosticDevice addSpecimenTypesItem(SpecimenType specimenTypesItem) {
    if (this.specimenTypes == null) {
      this.specimenTypes = new LinkedHashSet<SpecimenType>();
    }
    this.specimenTypes.add(specimenTypesItem);
    return this;
  }

   /**
   * Get specimenTypes
   * @return specimenTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<SpecimenType> getSpecimenTypes() {
    return specimenTypes;
  }


  public void setSpecimenTypes(Set<SpecimenType> specimenTypes) {
    this.specimenTypes = specimenTypes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanionDiagnosticDevice companionDiagnosticDevice = (CompanionDiagnosticDevice) o;
    return Objects.equals(this.id, companionDiagnosticDevice.id) &&
        Objects.equals(this.name, companionDiagnosticDevice.name) &&
        Objects.equals(this.manufacturer, companionDiagnosticDevice.manufacturer) &&
        Objects.equals(this.indicationDetails, companionDiagnosticDevice.indicationDetails) &&
        Objects.equals(this.fdaSubmissions, companionDiagnosticDevice.fdaSubmissions) &&
        Objects.equals(this.specimenTypes, companionDiagnosticDevice.specimenTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, manufacturer, indicationDetails, fdaSubmissions, specimenTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanionDiagnosticDevice {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    indicationDetails: ").append(toIndentedString(indicationDetails)).append("\n");
    sb.append("    fdaSubmissions: ").append(toIndentedString(fdaSubmissions)).append("\n");
    sb.append("    specimenTypes: ").append(toIndentedString(specimenTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

