/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.oncokb.oncokb_curation.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.oncokb.oncokb_curation.client.BiomarkerAssociation;
import org.oncokb.oncokb_curation.client.DrugBrand;
import org.oncokb.oncokb_curation.client.DrugSynonym;
import org.oncokb.oncokb_curation.client.FdaDrug;
import java.io.Serializable;

/**
 * Drug
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Drug implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_SEMANTIC_TYPE = "semanticType";
  @SerializedName(SERIALIZED_NAME_SEMANTIC_TYPE)
  private String semanticType;

  public static final String SERIALIZED_NAME_FDA_DRUG = "fdaDrug";
  @SerializedName(SERIALIZED_NAME_FDA_DRUG)
  private FdaDrug fdaDrug;

  public static final String SERIALIZED_NAME_SYNONYMS = "synonyms";
  @SerializedName(SERIALIZED_NAME_SYNONYMS)
  private Set<DrugSynonym> synonyms = null;

  public static final String SERIALIZED_NAME_BRANDS = "brands";
  @SerializedName(SERIALIZED_NAME_BRANDS)
  private Set<DrugBrand> brands = null;

  public static final String SERIALIZED_NAME_BIOMARKER_ASSOCIATIONS = "biomarkerAssociations";
  @SerializedName(SERIALIZED_NAME_BIOMARKER_ASSOCIATIONS)
  private Set<BiomarkerAssociation> biomarkerAssociations = null;

  public Drug() { 
  }

  public Drug id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public Drug name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Drug code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public Drug semanticType(String semanticType) {
    
    this.semanticType = semanticType;
    return this;
  }

   /**
   * Get semanticType
   * @return semanticType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSemanticType() {
    return semanticType;
  }


  public void setSemanticType(String semanticType) {
    this.semanticType = semanticType;
  }


  public Drug fdaDrug(FdaDrug fdaDrug) {
    
    this.fdaDrug = fdaDrug;
    return this;
  }

   /**
   * Get fdaDrug
   * @return fdaDrug
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FdaDrug getFdaDrug() {
    return fdaDrug;
  }


  public void setFdaDrug(FdaDrug fdaDrug) {
    this.fdaDrug = fdaDrug;
  }


  public Drug synonyms(Set<DrugSynonym> synonyms) {
    
    this.synonyms = synonyms;
    return this;
  }

  public Drug addSynonymsItem(DrugSynonym synonymsItem) {
    if (this.synonyms == null) {
      this.synonyms = new LinkedHashSet<DrugSynonym>();
    }
    this.synonyms.add(synonymsItem);
    return this;
  }

   /**
   * Get synonyms
   * @return synonyms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<DrugSynonym> getSynonyms() {
    return synonyms;
  }


  public void setSynonyms(Set<DrugSynonym> synonyms) {
    this.synonyms = synonyms;
  }


  public Drug brands(Set<DrugBrand> brands) {
    
    this.brands = brands;
    return this;
  }

  public Drug addBrandsItem(DrugBrand brandsItem) {
    if (this.brands == null) {
      this.brands = new LinkedHashSet<DrugBrand>();
    }
    this.brands.add(brandsItem);
    return this;
  }

   /**
   * Get brands
   * @return brands
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<DrugBrand> getBrands() {
    return brands;
  }


  public void setBrands(Set<DrugBrand> brands) {
    this.brands = brands;
  }


  public Drug biomarkerAssociations(Set<BiomarkerAssociation> biomarkerAssociations) {
    
    this.biomarkerAssociations = biomarkerAssociations;
    return this;
  }

  public Drug addBiomarkerAssociationsItem(BiomarkerAssociation biomarkerAssociationsItem) {
    if (this.biomarkerAssociations == null) {
      this.biomarkerAssociations = new LinkedHashSet<BiomarkerAssociation>();
    }
    this.biomarkerAssociations.add(biomarkerAssociationsItem);
    return this;
  }

   /**
   * Get biomarkerAssociations
   * @return biomarkerAssociations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<BiomarkerAssociation> getBiomarkerAssociations() {
    return biomarkerAssociations;
  }


  public void setBiomarkerAssociations(Set<BiomarkerAssociation> biomarkerAssociations) {
    this.biomarkerAssociations = biomarkerAssociations;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Drug drug = (Drug) o;
    return Objects.equals(this.id, drug.id) &&
        Objects.equals(this.name, drug.name) &&
        Objects.equals(this.code, drug.code) &&
        Objects.equals(this.semanticType, drug.semanticType) &&
        Objects.equals(this.fdaDrug, drug.fdaDrug) &&
        Objects.equals(this.synonyms, drug.synonyms) &&
        Objects.equals(this.brands, drug.brands) &&
        Objects.equals(this.biomarkerAssociations, drug.biomarkerAssociations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, code, semanticType, fdaDrug, synonyms, brands, biomarkerAssociations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Drug {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    semanticType: ").append(toIndentedString(semanticType)).append("\n");
    sb.append("    fdaDrug: ").append(toIndentedString(fdaDrug)).append("\n");
    sb.append("    synonyms: ").append(toIndentedString(synonyms)).append("\n");
    sb.append("    brands: ").append(toIndentedString(brands)).append("\n");
    sb.append("    biomarkerAssociations: ").append(toIndentedString(biomarkerAssociations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

