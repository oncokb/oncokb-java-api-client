/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.oncokb.oncokb_curation.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.oncokb.oncokb_curation.client.LongFilter;
import org.oncokb.oncokb_curation.client.StringFilter;
import java.io.Serializable;

/**
 * ClinicalTrialsGovConditionCriteria
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ClinicalTrialsGovConditionCriteria implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private LongFilter id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private StringFilter name;

  public static final String SERIALIZED_NAME_CANCER_TYPE_ID = "cancerTypeId";
  @SerializedName(SERIALIZED_NAME_CANCER_TYPE_ID)
  private LongFilter cancerTypeId;

  public static final String SERIALIZED_NAME_DISTINCT = "distinct";
  @SerializedName(SERIALIZED_NAME_DISTINCT)
  private Boolean distinct;

  public ClinicalTrialsGovConditionCriteria() { 
  }

  public ClinicalTrialsGovConditionCriteria id(LongFilter id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LongFilter getId() {
    return id;
  }


  public void setId(LongFilter id) {
    this.id = id;
  }


  public ClinicalTrialsGovConditionCriteria name(StringFilter name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StringFilter getName() {
    return name;
  }


  public void setName(StringFilter name) {
    this.name = name;
  }


  public ClinicalTrialsGovConditionCriteria cancerTypeId(LongFilter cancerTypeId) {
    
    this.cancerTypeId = cancerTypeId;
    return this;
  }

   /**
   * Get cancerTypeId
   * @return cancerTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LongFilter getCancerTypeId() {
    return cancerTypeId;
  }


  public void setCancerTypeId(LongFilter cancerTypeId) {
    this.cancerTypeId = cancerTypeId;
  }


  public ClinicalTrialsGovConditionCriteria distinct(Boolean distinct) {
    
    this.distinct = distinct;
    return this;
  }

   /**
   * Get distinct
   * @return distinct
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDistinct() {
    return distinct;
  }


  public void setDistinct(Boolean distinct) {
    this.distinct = distinct;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClinicalTrialsGovConditionCriteria clinicalTrialsGovConditionCriteria = (ClinicalTrialsGovConditionCriteria) o;
    return Objects.equals(this.id, clinicalTrialsGovConditionCriteria.id) &&
        Objects.equals(this.name, clinicalTrialsGovConditionCriteria.name) &&
        Objects.equals(this.cancerTypeId, clinicalTrialsGovConditionCriteria.cancerTypeId) &&
        Objects.equals(this.distinct, clinicalTrialsGovConditionCriteria.distinct);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, cancerTypeId, distinct);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClinicalTrialsGovConditionCriteria {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    cancerTypeId: ").append(toIndentedString(cancerTypeId)).append("\n");
    sb.append("    distinct: ").append(toIndentedString(distinct)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

