/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.oncokb.oncokb_curation.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.oncokb.oncokb_curation.client.TranscriptPairVM;
import java.io.Serializable;

/**
 * TranscriptComparisonVM
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TranscriptComparisonVM implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ALIGN = "align";
  @SerializedName(SERIALIZED_NAME_ALIGN)
  private Boolean align;

  public static final String SERIALIZED_NAME_TRANSCRIPT_A = "transcriptA";
  @SerializedName(SERIALIZED_NAME_TRANSCRIPT_A)
  private TranscriptPairVM transcriptA;

  public static final String SERIALIZED_NAME_TRANSCRIPT_B = "transcriptB";
  @SerializedName(SERIALIZED_NAME_TRANSCRIPT_B)
  private TranscriptPairVM transcriptB;

  public TranscriptComparisonVM() { 
  }

  public TranscriptComparisonVM align(Boolean align) {
    
    this.align = align;
    return this;
  }

   /**
   * Get align
   * @return align
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAlign() {
    return align;
  }


  public void setAlign(Boolean align) {
    this.align = align;
  }


  public TranscriptComparisonVM transcriptA(TranscriptPairVM transcriptA) {
    
    this.transcriptA = transcriptA;
    return this;
  }

   /**
   * Get transcriptA
   * @return transcriptA
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TranscriptPairVM getTranscriptA() {
    return transcriptA;
  }


  public void setTranscriptA(TranscriptPairVM transcriptA) {
    this.transcriptA = transcriptA;
  }


  public TranscriptComparisonVM transcriptB(TranscriptPairVM transcriptB) {
    
    this.transcriptB = transcriptB;
    return this;
  }

   /**
   * Get transcriptB
   * @return transcriptB
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TranscriptPairVM getTranscriptB() {
    return transcriptB;
  }


  public void setTranscriptB(TranscriptPairVM transcriptB) {
    this.transcriptB = transcriptB;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TranscriptComparisonVM transcriptComparisonVM = (TranscriptComparisonVM) o;
    return Objects.equals(this.align, transcriptComparisonVM.align) &&
        Objects.equals(this.transcriptA, transcriptComparisonVM.transcriptA) &&
        Objects.equals(this.transcriptB, transcriptComparisonVM.transcriptB);
  }

  @Override
  public int hashCode() {
    return Objects.hash(align, transcriptA, transcriptB);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TranscriptComparisonVM {\n");
    sb.append("    align: ").append(toIndentedString(align)).append("\n");
    sb.append("    transcriptA: ").append(toIndentedString(transcriptA)).append("\n");
    sb.append("    transcriptB: ").append(toIndentedString(transcriptB)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

