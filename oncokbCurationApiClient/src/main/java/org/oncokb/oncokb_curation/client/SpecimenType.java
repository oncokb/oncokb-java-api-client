/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.oncokb.oncokb_curation.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.oncokb.oncokb_curation.client.CompanionDiagnosticDevice;
import java.io.Serializable;

/**
 * SpecimenType
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SpecimenType implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_COMPANION_DIAGNOSTIC_DEVICES = "companionDiagnosticDevices";
  @SerializedName(SERIALIZED_NAME_COMPANION_DIAGNOSTIC_DEVICES)
  private Set<CompanionDiagnosticDevice> companionDiagnosticDevices = null;

  public SpecimenType() { 
  }

  public SpecimenType id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public SpecimenType type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public SpecimenType name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public SpecimenType companionDiagnosticDevices(Set<CompanionDiagnosticDevice> companionDiagnosticDevices) {
    
    this.companionDiagnosticDevices = companionDiagnosticDevices;
    return this;
  }

  public SpecimenType addCompanionDiagnosticDevicesItem(CompanionDiagnosticDevice companionDiagnosticDevicesItem) {
    if (this.companionDiagnosticDevices == null) {
      this.companionDiagnosticDevices = new LinkedHashSet<CompanionDiagnosticDevice>();
    }
    this.companionDiagnosticDevices.add(companionDiagnosticDevicesItem);
    return this;
  }

   /**
   * Get companionDiagnosticDevices
   * @return companionDiagnosticDevices
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<CompanionDiagnosticDevice> getCompanionDiagnosticDevices() {
    return companionDiagnosticDevices;
  }


  public void setCompanionDiagnosticDevices(Set<CompanionDiagnosticDevice> companionDiagnosticDevices) {
    this.companionDiagnosticDevices = companionDiagnosticDevices;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpecimenType specimenType = (SpecimenType) o;
    return Objects.equals(this.id, specimenType.id) &&
        Objects.equals(this.type, specimenType.type) &&
        Objects.equals(this.name, specimenType.name) &&
        Objects.equals(this.companionDiagnosticDevices, specimenType.companionDiagnosticDevices);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, name, companionDiagnosticDevices);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpecimenType {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    companionDiagnosticDevices: ").append(toIndentedString(companionDiagnosticDevices)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

