/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.oncokb.oncokb_curation.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.io.Serializable;

/**
 * BiomarkerAssociationDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BiomarkerAssociationDTO implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_ALTERATIONS = "alterations";
  @SerializedName(SERIALIZED_NAME_ALTERATIONS)
  private Set<Long> alterations = null;

  public static final String SERIALIZED_NAME_DRUGS = "drugs";
  @SerializedName(SERIALIZED_NAME_DRUGS)
  private Set<Long> drugs = null;

  public static final String SERIALIZED_NAME_FDA_SUBMISSIONS = "fdaSubmissions";
  @SerializedName(SERIALIZED_NAME_FDA_SUBMISSIONS)
  private Set<Long> fdaSubmissions = null;

  public static final String SERIALIZED_NAME_CANCER_TYPE = "cancerType";
  @SerializedName(SERIALIZED_NAME_CANCER_TYPE)
  private Long cancerType;

  public static final String SERIALIZED_NAME_GENE = "gene";
  @SerializedName(SERIALIZED_NAME_GENE)
  private Long gene;

  public BiomarkerAssociationDTO() { 
  }

  public BiomarkerAssociationDTO id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public BiomarkerAssociationDTO alterations(Set<Long> alterations) {
    
    this.alterations = alterations;
    return this;
  }

  public BiomarkerAssociationDTO addAlterationsItem(Long alterationsItem) {
    if (this.alterations == null) {
      this.alterations = new LinkedHashSet<Long>();
    }
    this.alterations.add(alterationsItem);
    return this;
  }

   /**
   * Get alterations
   * @return alterations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<Long> getAlterations() {
    return alterations;
  }


  public void setAlterations(Set<Long> alterations) {
    this.alterations = alterations;
  }


  public BiomarkerAssociationDTO drugs(Set<Long> drugs) {
    
    this.drugs = drugs;
    return this;
  }

  public BiomarkerAssociationDTO addDrugsItem(Long drugsItem) {
    if (this.drugs == null) {
      this.drugs = new LinkedHashSet<Long>();
    }
    this.drugs.add(drugsItem);
    return this;
  }

   /**
   * Get drugs
   * @return drugs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<Long> getDrugs() {
    return drugs;
  }


  public void setDrugs(Set<Long> drugs) {
    this.drugs = drugs;
  }


  public BiomarkerAssociationDTO fdaSubmissions(Set<Long> fdaSubmissions) {
    
    this.fdaSubmissions = fdaSubmissions;
    return this;
  }

  public BiomarkerAssociationDTO addFdaSubmissionsItem(Long fdaSubmissionsItem) {
    if (this.fdaSubmissions == null) {
      this.fdaSubmissions = new LinkedHashSet<Long>();
    }
    this.fdaSubmissions.add(fdaSubmissionsItem);
    return this;
  }

   /**
   * Get fdaSubmissions
   * @return fdaSubmissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<Long> getFdaSubmissions() {
    return fdaSubmissions;
  }


  public void setFdaSubmissions(Set<Long> fdaSubmissions) {
    this.fdaSubmissions = fdaSubmissions;
  }


  public BiomarkerAssociationDTO cancerType(Long cancerType) {
    
    this.cancerType = cancerType;
    return this;
  }

   /**
   * Get cancerType
   * @return cancerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getCancerType() {
    return cancerType;
  }


  public void setCancerType(Long cancerType) {
    this.cancerType = cancerType;
  }


  public BiomarkerAssociationDTO gene(Long gene) {
    
    this.gene = gene;
    return this;
  }

   /**
   * Get gene
   * @return gene
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getGene() {
    return gene;
  }


  public void setGene(Long gene) {
    this.gene = gene;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BiomarkerAssociationDTO biomarkerAssociationDTO = (BiomarkerAssociationDTO) o;
    return Objects.equals(this.id, biomarkerAssociationDTO.id) &&
        Objects.equals(this.alterations, biomarkerAssociationDTO.alterations) &&
        Objects.equals(this.drugs, biomarkerAssociationDTO.drugs) &&
        Objects.equals(this.fdaSubmissions, biomarkerAssociationDTO.fdaSubmissions) &&
        Objects.equals(this.cancerType, biomarkerAssociationDTO.cancerType) &&
        Objects.equals(this.gene, biomarkerAssociationDTO.gene);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, alterations, drugs, fdaSubmissions, cancerType, gene);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BiomarkerAssociationDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    alterations: ").append(toIndentedString(alterations)).append("\n");
    sb.append("    drugs: ").append(toIndentedString(drugs)).append("\n");
    sb.append("    fdaSubmissions: ").append(toIndentedString(fdaSubmissions)).append("\n");
    sb.append("    cancerType: ").append(toIndentedString(cancerType)).append("\n");
    sb.append("    gene: ").append(toIndentedString(gene)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

