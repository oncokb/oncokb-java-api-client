/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.oncokb.oncokb_curation.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.oncokb.oncokb_curation.client.BooleanFilter;
import org.oncokb.oncokb_curation.client.InstantFilter;
import org.oncokb.oncokb_curation.client.LongFilter;
import org.oncokb.oncokb_curation.client.StringFilter;
import java.io.Serializable;

/**
 * FdaSubmissionCriteria
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FdaSubmissionCriteria implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private LongFilter id;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private StringFilter number;

  public static final String SERIALIZED_NAME_SUPPLEMENT_NUMBER = "supplementNumber";
  @SerializedName(SERIALIZED_NAME_SUPPLEMENT_NUMBER)
  private StringFilter supplementNumber;

  public static final String SERIALIZED_NAME_DEVICE_NAME = "deviceName";
  @SerializedName(SERIALIZED_NAME_DEVICE_NAME)
  private StringFilter deviceName;

  public static final String SERIALIZED_NAME_GENERIC_NAME = "genericName";
  @SerializedName(SERIALIZED_NAME_GENERIC_NAME)
  private StringFilter genericName;

  public static final String SERIALIZED_NAME_DATE_RECEIVED = "dateReceived";
  @SerializedName(SERIALIZED_NAME_DATE_RECEIVED)
  private InstantFilter dateReceived;

  public static final String SERIALIZED_NAME_DECISION_DATE = "decisionDate";
  @SerializedName(SERIALIZED_NAME_DECISION_DATE)
  private InstantFilter decisionDate;

  public static final String SERIALIZED_NAME_CURATED = "curated";
  @SerializedName(SERIALIZED_NAME_CURATED)
  private BooleanFilter curated;

  public static final String SERIALIZED_NAME_GENETIC = "genetic";
  @SerializedName(SERIALIZED_NAME_GENETIC)
  private BooleanFilter genetic;

  public static final String SERIALIZED_NAME_BIOMARKER_ASSOCIATION_ID = "biomarkerAssociationId";
  @SerializedName(SERIALIZED_NAME_BIOMARKER_ASSOCIATION_ID)
  private LongFilter biomarkerAssociationId;

  public static final String SERIALIZED_NAME_COMPANION_DIAGNOSTIC_DEVICE_ID = "companionDiagnosticDeviceId";
  @SerializedName(SERIALIZED_NAME_COMPANION_DIAGNOSTIC_DEVICE_ID)
  private LongFilter companionDiagnosticDeviceId;

  public static final String SERIALIZED_NAME_TYPE_ID = "typeId";
  @SerializedName(SERIALIZED_NAME_TYPE_ID)
  private LongFilter typeId;

  public static final String SERIALIZED_NAME_TYPE_NAME = "typeName";
  @SerializedName(SERIALIZED_NAME_TYPE_NAME)
  private StringFilter typeName;

  public static final String SERIALIZED_NAME_TYPE_SHORT_NAME = "typeShortName";
  @SerializedName(SERIALIZED_NAME_TYPE_SHORT_NAME)
  private StringFilter typeShortName;

  public static final String SERIALIZED_NAME_DISTINCT = "distinct";
  @SerializedName(SERIALIZED_NAME_DISTINCT)
  private Boolean distinct;

  public FdaSubmissionCriteria() { 
  }

  public FdaSubmissionCriteria id(LongFilter id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LongFilter getId() {
    return id;
  }


  public void setId(LongFilter id) {
    this.id = id;
  }


  public FdaSubmissionCriteria number(StringFilter number) {
    
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StringFilter getNumber() {
    return number;
  }


  public void setNumber(StringFilter number) {
    this.number = number;
  }


  public FdaSubmissionCriteria supplementNumber(StringFilter supplementNumber) {
    
    this.supplementNumber = supplementNumber;
    return this;
  }

   /**
   * Get supplementNumber
   * @return supplementNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StringFilter getSupplementNumber() {
    return supplementNumber;
  }


  public void setSupplementNumber(StringFilter supplementNumber) {
    this.supplementNumber = supplementNumber;
  }


  public FdaSubmissionCriteria deviceName(StringFilter deviceName) {
    
    this.deviceName = deviceName;
    return this;
  }

   /**
   * Get deviceName
   * @return deviceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StringFilter getDeviceName() {
    return deviceName;
  }


  public void setDeviceName(StringFilter deviceName) {
    this.deviceName = deviceName;
  }


  public FdaSubmissionCriteria genericName(StringFilter genericName) {
    
    this.genericName = genericName;
    return this;
  }

   /**
   * Get genericName
   * @return genericName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StringFilter getGenericName() {
    return genericName;
  }


  public void setGenericName(StringFilter genericName) {
    this.genericName = genericName;
  }


  public FdaSubmissionCriteria dateReceived(InstantFilter dateReceived) {
    
    this.dateReceived = dateReceived;
    return this;
  }

   /**
   * Get dateReceived
   * @return dateReceived
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InstantFilter getDateReceived() {
    return dateReceived;
  }


  public void setDateReceived(InstantFilter dateReceived) {
    this.dateReceived = dateReceived;
  }


  public FdaSubmissionCriteria decisionDate(InstantFilter decisionDate) {
    
    this.decisionDate = decisionDate;
    return this;
  }

   /**
   * Get decisionDate
   * @return decisionDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InstantFilter getDecisionDate() {
    return decisionDate;
  }


  public void setDecisionDate(InstantFilter decisionDate) {
    this.decisionDate = decisionDate;
  }


  public FdaSubmissionCriteria curated(BooleanFilter curated) {
    
    this.curated = curated;
    return this;
  }

   /**
   * Get curated
   * @return curated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BooleanFilter getCurated() {
    return curated;
  }


  public void setCurated(BooleanFilter curated) {
    this.curated = curated;
  }


  public FdaSubmissionCriteria genetic(BooleanFilter genetic) {
    
    this.genetic = genetic;
    return this;
  }

   /**
   * Get genetic
   * @return genetic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BooleanFilter getGenetic() {
    return genetic;
  }


  public void setGenetic(BooleanFilter genetic) {
    this.genetic = genetic;
  }


  public FdaSubmissionCriteria biomarkerAssociationId(LongFilter biomarkerAssociationId) {
    
    this.biomarkerAssociationId = biomarkerAssociationId;
    return this;
  }

   /**
   * Get biomarkerAssociationId
   * @return biomarkerAssociationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LongFilter getBiomarkerAssociationId() {
    return biomarkerAssociationId;
  }


  public void setBiomarkerAssociationId(LongFilter biomarkerAssociationId) {
    this.biomarkerAssociationId = biomarkerAssociationId;
  }


  public FdaSubmissionCriteria companionDiagnosticDeviceId(LongFilter companionDiagnosticDeviceId) {
    
    this.companionDiagnosticDeviceId = companionDiagnosticDeviceId;
    return this;
  }

   /**
   * Get companionDiagnosticDeviceId
   * @return companionDiagnosticDeviceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LongFilter getCompanionDiagnosticDeviceId() {
    return companionDiagnosticDeviceId;
  }


  public void setCompanionDiagnosticDeviceId(LongFilter companionDiagnosticDeviceId) {
    this.companionDiagnosticDeviceId = companionDiagnosticDeviceId;
  }


  public FdaSubmissionCriteria typeId(LongFilter typeId) {
    
    this.typeId = typeId;
    return this;
  }

   /**
   * Get typeId
   * @return typeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LongFilter getTypeId() {
    return typeId;
  }


  public void setTypeId(LongFilter typeId) {
    this.typeId = typeId;
  }


  public FdaSubmissionCriteria typeName(StringFilter typeName) {
    
    this.typeName = typeName;
    return this;
  }

   /**
   * Get typeName
   * @return typeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StringFilter getTypeName() {
    return typeName;
  }


  public void setTypeName(StringFilter typeName) {
    this.typeName = typeName;
  }


  public FdaSubmissionCriteria typeShortName(StringFilter typeShortName) {
    
    this.typeShortName = typeShortName;
    return this;
  }

   /**
   * Get typeShortName
   * @return typeShortName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StringFilter getTypeShortName() {
    return typeShortName;
  }


  public void setTypeShortName(StringFilter typeShortName) {
    this.typeShortName = typeShortName;
  }


  public FdaSubmissionCriteria distinct(Boolean distinct) {
    
    this.distinct = distinct;
    return this;
  }

   /**
   * Get distinct
   * @return distinct
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDistinct() {
    return distinct;
  }


  public void setDistinct(Boolean distinct) {
    this.distinct = distinct;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FdaSubmissionCriteria fdaSubmissionCriteria = (FdaSubmissionCriteria) o;
    return Objects.equals(this.id, fdaSubmissionCriteria.id) &&
        Objects.equals(this.number, fdaSubmissionCriteria.number) &&
        Objects.equals(this.supplementNumber, fdaSubmissionCriteria.supplementNumber) &&
        Objects.equals(this.deviceName, fdaSubmissionCriteria.deviceName) &&
        Objects.equals(this.genericName, fdaSubmissionCriteria.genericName) &&
        Objects.equals(this.dateReceived, fdaSubmissionCriteria.dateReceived) &&
        Objects.equals(this.decisionDate, fdaSubmissionCriteria.decisionDate) &&
        Objects.equals(this.curated, fdaSubmissionCriteria.curated) &&
        Objects.equals(this.genetic, fdaSubmissionCriteria.genetic) &&
        Objects.equals(this.biomarkerAssociationId, fdaSubmissionCriteria.biomarkerAssociationId) &&
        Objects.equals(this.companionDiagnosticDeviceId, fdaSubmissionCriteria.companionDiagnosticDeviceId) &&
        Objects.equals(this.typeId, fdaSubmissionCriteria.typeId) &&
        Objects.equals(this.typeName, fdaSubmissionCriteria.typeName) &&
        Objects.equals(this.typeShortName, fdaSubmissionCriteria.typeShortName) &&
        Objects.equals(this.distinct, fdaSubmissionCriteria.distinct);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, number, supplementNumber, deviceName, genericName, dateReceived, decisionDate, curated, genetic, biomarkerAssociationId, companionDiagnosticDeviceId, typeId, typeName, typeShortName, distinct);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FdaSubmissionCriteria {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    supplementNumber: ").append(toIndentedString(supplementNumber)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    genericName: ").append(toIndentedString(genericName)).append("\n");
    sb.append("    dateReceived: ").append(toIndentedString(dateReceived)).append("\n");
    sb.append("    decisionDate: ").append(toIndentedString(decisionDate)).append("\n");
    sb.append("    curated: ").append(toIndentedString(curated)).append("\n");
    sb.append("    genetic: ").append(toIndentedString(genetic)).append("\n");
    sb.append("    biomarkerAssociationId: ").append(toIndentedString(biomarkerAssociationId)).append("\n");
    sb.append("    companionDiagnosticDeviceId: ").append(toIndentedString(companionDiagnosticDeviceId)).append("\n");
    sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
    sb.append("    typeName: ").append(toIndentedString(typeName)).append("\n");
    sb.append("    typeShortName: ").append(toIndentedString(typeShortName)).append("\n");
    sb.append("    distinct: ").append(toIndentedString(distinct)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

