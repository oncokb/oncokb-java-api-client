/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.oncokb.oncokb_curation.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.oncokb.oncokb_curation.client.LongFilter;
import org.oncokb.oncokb_curation.client.StringFilter;
import java.io.Serializable;

/**
 * DrugCriteria
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DrugCriteria implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private LongFilter id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private StringFilter name;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private StringFilter code;

  public static final String SERIALIZED_NAME_SYNONYMS_ID = "synonymsId";
  @SerializedName(SERIALIZED_NAME_SYNONYMS_ID)
  private LongFilter synonymsId;

  public static final String SERIALIZED_NAME_BIOMARKER_ASSOCIATION_ID = "biomarkerAssociationId";
  @SerializedName(SERIALIZED_NAME_BIOMARKER_ASSOCIATION_ID)
  private LongFilter biomarkerAssociationId;

  public static final String SERIALIZED_NAME_BRANDS_ID = "brandsId";
  @SerializedName(SERIALIZED_NAME_BRANDS_ID)
  private LongFilter brandsId;

  public static final String SERIALIZED_NAME_BRANDS_NAME = "brandsName";
  @SerializedName(SERIALIZED_NAME_BRANDS_NAME)
  private StringFilter brandsName;

  public static final String SERIALIZED_NAME_DISTINCT = "distinct";
  @SerializedName(SERIALIZED_NAME_DISTINCT)
  private Boolean distinct;

  public DrugCriteria() { 
  }

  public DrugCriteria id(LongFilter id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LongFilter getId() {
    return id;
  }


  public void setId(LongFilter id) {
    this.id = id;
  }


  public DrugCriteria name(StringFilter name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StringFilter getName() {
    return name;
  }


  public void setName(StringFilter name) {
    this.name = name;
  }


  public DrugCriteria code(StringFilter code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StringFilter getCode() {
    return code;
  }


  public void setCode(StringFilter code) {
    this.code = code;
  }


  public DrugCriteria synonymsId(LongFilter synonymsId) {
    
    this.synonymsId = synonymsId;
    return this;
  }

   /**
   * Get synonymsId
   * @return synonymsId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LongFilter getSynonymsId() {
    return synonymsId;
  }


  public void setSynonymsId(LongFilter synonymsId) {
    this.synonymsId = synonymsId;
  }


  public DrugCriteria biomarkerAssociationId(LongFilter biomarkerAssociationId) {
    
    this.biomarkerAssociationId = biomarkerAssociationId;
    return this;
  }

   /**
   * Get biomarkerAssociationId
   * @return biomarkerAssociationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LongFilter getBiomarkerAssociationId() {
    return biomarkerAssociationId;
  }


  public void setBiomarkerAssociationId(LongFilter biomarkerAssociationId) {
    this.biomarkerAssociationId = biomarkerAssociationId;
  }


  public DrugCriteria brandsId(LongFilter brandsId) {
    
    this.brandsId = brandsId;
    return this;
  }

   /**
   * Get brandsId
   * @return brandsId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LongFilter getBrandsId() {
    return brandsId;
  }


  public void setBrandsId(LongFilter brandsId) {
    this.brandsId = brandsId;
  }


  public DrugCriteria brandsName(StringFilter brandsName) {
    
    this.brandsName = brandsName;
    return this;
  }

   /**
   * Get brandsName
   * @return brandsName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StringFilter getBrandsName() {
    return brandsName;
  }


  public void setBrandsName(StringFilter brandsName) {
    this.brandsName = brandsName;
  }


  public DrugCriteria distinct(Boolean distinct) {
    
    this.distinct = distinct;
    return this;
  }

   /**
   * Get distinct
   * @return distinct
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDistinct() {
    return distinct;
  }


  public void setDistinct(Boolean distinct) {
    this.distinct = distinct;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DrugCriteria drugCriteria = (DrugCriteria) o;
    return Objects.equals(this.id, drugCriteria.id) &&
        Objects.equals(this.name, drugCriteria.name) &&
        Objects.equals(this.code, drugCriteria.code) &&
        Objects.equals(this.synonymsId, drugCriteria.synonymsId) &&
        Objects.equals(this.biomarkerAssociationId, drugCriteria.biomarkerAssociationId) &&
        Objects.equals(this.brandsId, drugCriteria.brandsId) &&
        Objects.equals(this.brandsName, drugCriteria.brandsName) &&
        Objects.equals(this.distinct, drugCriteria.distinct);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, code, synonymsId, biomarkerAssociationId, brandsId, brandsName, distinct);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DrugCriteria {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    synonymsId: ").append(toIndentedString(synonymsId)).append("\n");
    sb.append("    biomarkerAssociationId: ").append(toIndentedString(biomarkerAssociationId)).append("\n");
    sb.append("    brandsId: ").append(toIndentedString(brandsId)).append("\n");
    sb.append("    brandsName: ").append(toIndentedString(brandsName)).append("\n");
    sb.append("    distinct: ").append(toIndentedString(distinct)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

